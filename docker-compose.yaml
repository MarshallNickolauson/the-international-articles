services:
  backend:
    container_name: backend
    build:
      context: ./backend
    ports:
      - "5000:5000"
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - /app/node_modules
      - image-data:/data
    networks:
      - app-network
    command: [ "sh", "-c", "npm install && npm run server" ]

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    ports:
      - "0.0.0.0:3000:3000"
    env_file:
      - .env
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  image-storage:
    container_name: image-storage
    build:
      context: ./image-storage
    ports:
      - "8080:80"
    volumes:
      - image-data:/data
    networks:
      - app-network

  marianmt-ai:
    container_name: marianmt-ai
    build:
      context: ./marianmt-ai
    ports:
      - "9000:9000"
    volumes:
      - ./marianmt-ai:/app
      - marian-models:/app/models
      - pip-cache:/root/.cache/pip
    networks:
      - app-network

volumes:
  mongo-data:
  image-data:
  marian-models:
  pip-cache:

networks:
  app-network:
    driver: bridge
